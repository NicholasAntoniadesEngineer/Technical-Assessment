[{"id":"b7d59128.25875","type":"tab","label":"ECG Flow","disabled":false,"info":""},{"id":"12e70a80.a667a6","type":"tab","label":"Strain Gauge Flow","disabled":false,"info":""},{"id":"e63240f3.5379","type":"tab","label":"Strain Gauge and ECG","disabled":false,"info":""},{"id":"7f81f115.807e1","type":"subflow","name":"COMMAND output","info":"### Take a COMMAND topic with the action in the payload. Send to DB & MQTT\n\nFeed in a msg with an appropriate COMMAND topic, e,g, COMMAND/SWITCH01\n\nThe payload must contain everything needed to save to MongoDB & everythng\nneeded to process the command elsewhere.\n\n### Input\n- msg with \n    - topic set to COMMAND/<switch-name> \n    - paload set to command to send (e.g \"On\" or \"Off\")\n\n### Output\n- Each input is sent to MongoDB\n   - Once to a collection matching the topic\n   - Once to a summary collection \"CurrentSwitchStatus\" with one record for each switch\n- Each input is sent to MQTT on COMMAND/#\n   - COMMAND/SWITCHnn message is sent with Retain=true, QoS=1\n   - So when NR restarts, it recieves back the last command and replays is\n   - This ensures all switches are reset according to the last setting BUT it will override any manual sets\n   - Obviously this may result in incorrect settings if a scheduled change event has been missed. (TODO improve scheduler)\n- Output 1 is for debugging the detail output\n- Output 2 is for debugging the summary output\n \n### Expected Input msg Format\n```JSON\n{\n\t\"topic\": \"HARDWARE-IN/TH1/0x3001\",\n\t\"payload\": {\n\t\t\"timestamp\": \"2016-01-09T17:46:17.016Z\",\n\t\t\"topic\": \"TH1/0x3001\",\n\t\t\"inputController\": \"RFX\",\n\t\t\"deviceFamily\": \"TH1\",\n\t\t\"id\": \"0x3001\",\n\t\t\"deviceFeatures\": \"TH\",\n\t\t\n\t\t\"temperature\": { \"value\": 19, \"unit\": \"degC\" },\n\t\t\"humidity\": { \"value\": 50, \"unit\": \"%\", \"status\": \"NORMAL\" },\n\t\t\"status\": { \"rssi\": 4, \"battery\": 9 },\n\t\t\"rssi\": 4,\n\t\t\"battery\": 9,\n\t\t\"Temperature\": 19,\n\t\t\"Humidity\": 50,\n\t\t\"Heat_Index\": 18.3,\n\t\t\"DewPoint\": 8.3\n\t}\n}\n```\n","in":[{"x":100,"y":160,"wires":[{"id":"13c42b13.ec3bd5"}]}],"out":[{"x":644,"y":100,"wires":[{"id":"13c42b13.ec3bd5","port":0}]},{"x":683,"y":209,"wires":[{"id":"13c42b13.ec3bd5","port":1}]}]},{"id":"f779dd92.cf698","type":"ui_tab","name":"Chart 1","icon":"dashboard","order":2,"disabled":false,"hidden":false},{"id":"44d9222c.07961c","type":"ui_group","name":"Stran Gauge","tab":"f779dd92.cf698","order":2,"disp":true,"width":"26","collapse":true,"className":""},{"id":"df526a17.7d18e8","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey","palette":"light"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"3b2726f7.c4d8da","type":"mqtt-broker","broker":"localhost","port":"1883","clientid":"Pi2_NR-Live","usetls":false,"verifyservercert":true,"compatmode":false,"keepalive":"15","cleansession":true,"birthTopic":"DEVICES/PI2NR-LIVE","birthQos":"1","birthRetain":"true","birthPayload":"Online","willTopic":"DEVICES/PI2NR-LIVE","willQos":"1","willRetain":"true","willPayload":"Offline"},{"id":"9f8a5d12.6f72b","type":"ui_group","z":"b7d59128.25875","name":"Hall","tab":"2bb8ea8.6805016","order":1,"disp":true,"width":"18"},{"id":"2bb8ea8.6805016","type":"ui_tab","z":"b7d59128.25875","name":"LIGHT","icon":"stars","order":6},{"id":"ccb2eee6.77ca8","type":"ui_group","name":"ECG","tab":"f779dd92.cf698","order":2,"disp":true,"width":"24","collapse":false,"className":""},{"id":"13c42b13.ec3bd5","type":"function","z":"7f81f115.807e1","name":"Validate Input. 1) Device specific output, 2) Current Status","func":"/***\n * Make sure output message is ready to be recorded in MongoDB\n * INPUT: \n *   From MQTT HARDWARE-IN but for remote controls (and smart switches) only\n * OUTPUTS:\n *   1) Device specific, data is sent to both MongoDB and MQTT\n *   2) Current Status. Data is sent to the CurrentSwitchStatus MongoDB collection only\n ***/\n\nif ( !('topic' in msg) || msg.topic === '' ) {\n    node.warn( 'No topic! Dropping output' );\n    return null;\n}\n\nif ( (msg.topic.split('/'))[0] !== 'COMMAND' ) {\n    node.warn( 'Topic is not COMMAND/# Dropping Output' );\n    return null;\n}\n\nif ( !('collection' in msg) ) {\n    msg.collection  = msg.topic; \n}\n\nif ( !('_id' in msg) ) {\n    msg._id = new Date();\n}\n\n// Record what triggered this command msg if we can\nif ( !('inputHardware' in msg) ) {\n    msg.inputHardware = 'MANUAL_OR_NR';\n}\n\n// -- CHANGED TO A LISTENER ON COMMAND CHANNEL --\n//// Keep current switch status in global memory\n//var cmdStatus = global.get('cmdStatus') || {};\n//cmdStatus[msg.topic] = msg.payload;\n//global.set('cmdStatus', cmdStatus);\n\n// 2nd output is for the Current Switch status\nvar currMsg = {\n    'collection': 'CurrentSwitchStatus',\n    '_id': msg.topic,\n    'state': msg.payload,\n    'lastUpdate': msg._id,\n    'inputHardware': msg.inputHardware\n};\n\nreturn [msg, currMsg];","outputs":"2","noerr":0,"x":360,"y":160,"wires":[["6c18bd26.93e744"],[]]},{"id":"6c18bd26.93e744","type":"mqtt out","z":"7f81f115.807e1","name":"COMMAND/SWITCHnn (On/Off) [retained]","topic":"","qos":"1","retain":"true","broker":"3b2726f7.c4d8da","x":794,"y":154,"wires":[]},{"id":"8d3967a.f72c698","type":"comment","z":"7f81f115.807e1","name":"Take a COMMAND topic with the action in the payload. Send to DB & MQTT","info":"### Take a COMMAND topic with the action in the payload. Send to DB & MQTT\n\nFeed in a msg with an appropriate COMMAND topic, e,g, COMMAND/SWITCH01\n\nThe payload must contain everything needed to save to MongoDB & everythng\nneeded to process the command elsewhere.\n\n### Input\n- msg with \n    - topic set to COMMAND/<switch-name> \n    - paload set to command to send (e.g \"On\" or \"Off\")\n\n### Output\n- Each input is sent to MongoDB\n   - Once to a collection matching the topic\n   - Once to a summary collection \"CurrentSwitchStatus\" with one record for each switch\n- Each input is sent to MQTT on COMMAND/#\n   - COMMAND/SWITCHnn message is sent with Retain=true, QoS=1\n   - So when NR restarts, it recieves back the last command and replays is\n   - This ensures all switches are reset according to the last setting BUT it will override any manual sets\n   - Obviously this may result in incorrect settings if a scheduled change event has been missed. (TODO improve scheduler)\n- Output 1 is for debugging the detail output\n- Output 2 is for debugging the summary output\n \n### Expected Input msg Format\n```JSON\n{\n\t\"topic\": \"HARDWARE-IN/TH1/0x3001\",\n\t\"payload\": {\n\t\t\"timestamp\": \"2016-01-09T17:46:17.016Z\",\n\t\t\"topic\": \"TH1/0x3001\",\n\t\t\"inputController\": \"RFX\",\n\t\t\"deviceFamily\": \"TH1\",\n\t\t\"id\": \"0x3001\",\n\t\t\"deviceFeatures\": \"TH\",\n\t\t\n\t\t\"temperature\": { \"value\": 19, \"unit\": \"degC\" },\n\t\t\"humidity\": { \"value\": 50, \"unit\": \"%\", \"status\": \"NORMAL\" },\n\t\t\"status\": { \"rssi\": 4, \"battery\": 9 },\n\t\t\"rssi\": 4,\n\t\t\"battery\": 9,\n\t\t\"Temperature\": 19,\n\t\t\"Humidity\": 50,\n\t\t\"Heat_Index\": 18.3,\n\t\t\"DewPoint\": 8.3\n\t}\n}\n```\n","x":358.8957824707031,"y":23.888885498046875,"wires":[]},{"id":"e9288d30.e3c06","type":"comment","z":"7f81f115.807e1","name":"TODO: Save command updates to json file","info":"and reload on startup, passing to UI.","x":362,"y":311,"wires":[]},{"id":"bd33225c.5bca1","type":"calculator","z":"b7d59128.25875","name":"Divide by 1","inputMsgField":"payload","outputMsgField":"payload","operation":"div","constant":"1","round":false,"decimals":0,"x":330,"y":400,"wires":[["f9829d6c.a4e9b"]]},{"id":"835de0c6.df161","type":"smooth","z":"b7d59128.25875","name":"Mean","property":"payload","action":"mean","count":"2","round":"2","mult":"single","reduce":false,"x":590,"y":320,"wires":[[]]},{"id":"45a6a5b8.e7138c","type":"pythonshell in","z":"12e70a80.a667a6","name":"Strain Gauge script","pyfile":"/home/pi/Desktop/Fuell_steering_wheel/Code/ADS1241_SPI.py","virtualenv":"","continuous":true,"stdInData":true,"x":170,"y":120,"wires":[["969b6e33.d08c6","6dcbc775.2cd318"]]},{"id":"969b6e33.d08c6","type":"debug","z":"12e70a80.a667a6","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":150,"y":220,"wires":[]},{"id":"e58f8a1b.6f66b8","type":"pythonshell in","z":"e63240f3.5379","name":"ECG and ADC script","pyfile":"/home/pi/Desktop/Fuell_steering_wheel/Code/ECG_ADC_Integarion.py","virtualenv":"","continuous":true,"stdInData":true,"x":160,"y":180,"wires":[["ecc46b65.03fe88","f0c2b446.91f768"]]},{"id":"f9829d6c.a4e9b","type":"smooth","z":"b7d59128.25875","name":"High Pass","property":"payload","action":"high","count":"2","round":"2","mult":"single","reduce":false,"x":530,"y":240,"wires":[["36346b0e.4aee74"]]},{"id":"36346b0e.4aee74","type":"smooth","z":"b7d59128.25875","name":"Low Pass","property":"payload","action":"low","count":"2","round":"2","mult":"single","reduce":false,"x":520,"y":280,"wires":[["835de0c6.df161"]]},{"id":"f0c2b446.91f768","type":"function","z":"e63240f3.5379","name":"2 CH Splitter","func":"\nmsg1 = {};\nmsg2 = {};\n\nvar array = msg.payload.split(',');\na = array[0], b = array[1];\n    \n    \nvar array_a = array[0].split('(');\na = array_a[1];\nmsg1.payload = a;\n   \n\nvar array_b = array[1].split(')');\narray_b = array_b[0].split(' ')\nb = array_b[1]\nmsg2.payload = b; \n    \n    \n\nreturn [msg1,msg2];\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":120,"wires":[["5b84bc07.788df4","28a19eb8.f830b2"],[]]},{"id":"5b84bc07.788df4","type":"calculator","z":"e63240f3.5379","name":"Divide by 1","inputMsgField":"payload","outputMsgField":"payload","operation":"div","constant":"1","round":false,"decimals":0,"x":370,"y":80,"wires":[["a1f7ac1.61e6a5"]]},{"id":"dc75d05f.ddfbe","type":"smooth","z":"e63240f3.5379","name":"Mean","property":"payload","action":"mean","count":"3","round":"2","mult":"single","reduce":false,"x":590,"y":160,"wires":[[]]},{"id":"a1f7ac1.61e6a5","type":"smooth","z":"e63240f3.5379","name":"High Pass","property":"payload","action":"high","count":"2","round":"2","mult":"single","reduce":false,"x":610,"y":80,"wires":[["e91827bf.7d7e58"]]},{"id":"e91827bf.7d7e58","type":"smooth","z":"e63240f3.5379","name":"Low Pass","property":"payload","action":"low","count":"2","round":"2","mult":"single","reduce":false,"x":600,"y":120,"wires":[["dc75d05f.ddfbe"]]},{"id":"6dcbc775.2cd318","type":"function","z":"12e70a80.a667a6","name":"2 CH Splitter","func":"\nmsg1 = {};\nmsg2 = {};\n\nvar array = msg.payload.split(',');\na = array[0], b = array[1];\n    \n    \nvar array_a = array[0].split('(');\na = array_a[1];\nmsg1.payload = a;\n   \n\nvar array_b = array[1].split(')');\narray_b = array_b[0].split(' ')\nb = array_b[1]\nmsg2.payload = b; \n    \n    \n\nreturn [msg1,msg2];\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":200,"wires":[["9555205.bb7aee"],[]]},{"id":"ecc46b65.03fe88","type":"debug","z":"e63240f3.5379","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":300,"y":260,"wires":[]},{"id":"69869d11.955764","type":"pythonshell in","z":"b7d59128.25875","name":"ECG script","pyfile":"Fuell_steering_wheel/Code/ECG testing.py","virtualenv":"","continuous":true,"stdInData":true,"x":150,"y":400,"wires":[["bd33225c.5bca1"]]},{"id":"28a19eb8.f830b2","type":"ui_chart","z":"e63240f3.5379","name":"","group":"ccb2eee6.77ca8","order":1,"width":"24","height":"7","label":"ECG unfiltred","chartType":"line","legend":"true","xformat":"auto","interpolate":"cubic","nodata":"Waiting for data...","dot":false,"ymin":"","ymax":"","removeOlder":"3.5","removeOlderPoints":"200","removeOlderUnit":"1","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#089306","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":580,"y":240,"wires":[[]]},{"id":"9555205.bb7aee","type":"ui_chart","z":"12e70a80.a667a6","name":"","group":"44d9222c.07961c","order":3,"width":"24","height":"7","label":"Strain gauge output","chartType":"line","legend":"true","xformat":"auto","interpolate":"cubic","nodata":"Waiting for data...","dot":false,"ymin":"4210000","ymax":"4240000","removeOlder":"4","removeOlderPoints":"220","removeOlderUnit":"1","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#089306","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":470,"y":280,"wires":[[]]}]